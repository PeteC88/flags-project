{"remainingRequest":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue?vue&type=template&id=3134e4d6","dependencies":[{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue","mtime":1650906797025},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js","mtime":1649769535122},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1649769535904},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js","mtime":1649769534032}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHNlY3Rpb24gY2xhc3M9ImZpbHRlcnMiPgogICAgPCEtLSBObyBuZWVkIHRvIHVzZSBrZXl1cCBldmVudCBhcyB3ZSB1c2UgYSBjb21wdXRlZCBwcm9wZXJ0eSBpbiB0aGUgc2VhcmNoIC0tPgogICAgPGlucHV0CiAgICAgIHR5cGU9InNlYXJjaCIKICAgICAgbmFtZT0ic2VhcmNoIgogICAgICBwbGFjZWhvbGRlcj0iU2VhcmNoIGZvciBhIENvdW50cnkiCiAgICAgIHYtbW9kZWw9InNlYXJjaGVkTmF0aW9ucyIKICAgIC8+CiAgICA8bGFiZWwgZm9yPSJvcHRpb25zIj48L2xhYmVsPgogICAgPHNlbGVjdCBpZD0ic2VsZWN0UmVnaW9uIiByZWY9InNlbGVjdFJlZ2lvbiIgQGNoYW5nZT0iZmlsdGVyUmVnaW9uIj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iYWxsIj5GaWx0ZXIgYnkgUmVnaW9uPC9vcHRpb24+CiAgICAgIDxvcHRpb24gdmFsdWU9ImFmcmljYSI+QWZyaWNhPC9vcHRpb24+CiAgICAgIDxvcHRpb24gdmFsdWU9ImFtZXJpY2EiPkFtZXJpY2E8L29wdGlvbj4KICAgICAgPG9wdGlvbiB2YWx1ZT0iYXNpYSI+QXNpYTwvb3B0aW9uPgogICAgICA8b3B0aW9uIHZhbHVlPSJldXJvcGUiPkV1cm9wZTwvb3B0aW9uPgogICAgICA8b3B0aW9uIHZhbHVlPSJvY2VhbmlhIj5PY2VhbmlhPC9vcHRpb24+CiAgICA8L3NlbGVjdD4KICAgIDx1bCB2LWlmPSJmaWx0ZXJlZE5hdGlvbnMubGVuZ3RoID4gMCI+CiAgICAgIDxuYXRpb24tY2FyZAogICAgICAgIHYtZm9yPSJuYXRpb24gaW4gZmlsdGVyZWROYXRpb25zIgogICAgICAgIDprZXk9Im5hdGlvbi5uYW1lLmNvbW1vbiIKICAgICAgICA6ZmxhZ3M9Im5hdGlvbi5mbGFncyIKICAgICAgICA6bmFtZT0ibmF0aW9uLm5hbWUuY29tbW9uIgogICAgICAgIDpwb3B1bGF0aW9uPSJuYXRpb24ucG9wdWxhdGlvbiIKICAgICAgICA6cmVnaW9uPSJuYXRpb24ucmVnaW9uIgogICAgICAgIDpjYXBpdGFsPSJuYXRpb24uY2FwaXRhbFswXSIKICAgICAgPjwvbmF0aW9uLWNhcmQ+CiAgICA8L3VsPgogICAgPGgzIHYtZWxzZS1pZj0ic2VhcmNoZWROYXRpb25zICE9PSAnJyI+CiAgICAgIFNvcnJ5LCBubyBuYXRpb24gZm91bmQsIHRyeSB0byBjaGFuZ2UgdGhlIHJlZ2lvbiBvciB0aGUgc3BlbGxpbmcgaW4gc2VhcmNoCiAgICAgIGJhci4gSWYgeW91IHdhbnQgdG8gc2hvdyBhbGwgdGhlIENvdW50cnkgcGxlYXNlIHNlbGVjdCAiRmlsdGVyIGJ5IHJlZ2lvbiIKICAgICAgYW5kIGRlbGV0ZSB0aGUgaW5wdXQgb24gc2VhcmNoIGJhcgogICAgPC9oMz4KICA8L3NlY3Rpb24+Cg=="},{"version":3,"sources":["/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC,CAAC,CAAC;MACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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","file":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue","sourceRoot":"","sourcesContent":["<template>\n  <section class=\"filters\">\n    <!-- No need to use keyup event as we use a computed property in the search -->\n    <input\n      type=\"search\"\n      name=\"search\"\n      placeholder=\"Search for a Country\"\n      v-model=\"searchedNations\"\n    />\n    <label for=\"options\"></label>\n    <select id=\"selectRegion\" ref=\"selectRegion\" @change=\"filterRegion\">\n      <option value=\"all\">Filter by Region</option>\n      <option value=\"africa\">Africa</option>\n      <option value=\"america\">America</option>\n      <option value=\"asia\">Asia</option>\n      <option value=\"europe\">Europe</option>\n      <option value=\"oceania\">Oceania</option>\n    </select>\n    <ul v-if=\"filteredNations.length > 0\">\n      <nation-card\n        v-for=\"nation in filteredNations\"\n        :key=\"nation.name.common\"\n        :flags=\"nation.flags\"\n        :name=\"nation.name.common\"\n        :population=\"nation.population\"\n        :region=\"nation.region\"\n        :capital=\"nation.capital[0]\"\n      ></nation-card>\n    </ul>\n    <h3 v-else-if=\"searchedNations !== ''\">\n      Sorry, no nation found, try to change the region or the spelling in search\n      bar. If you want to show all the Country please select \"Filter by region\"\n      and delete the input on search bar\n    </h3>\n  </section>\n</template>\n<script>\nimport NationCard from \"../components/NationCard.vue\";\nexport default {\n  components: {\n    NationCard,\n  },\n  data() {\n    return {\n      selectedRegion: \"all\",\n      searchedNations: \"\",\n      noNationsFound: false,\n    };\n  },\n  //use the computed property to access the getters from the store\n  computed: {\n    filteredNations() {\n      const nations = this.$store.getters.nations;\n\n      //const regionSelect = this.$refs.selectRegion;\n\n      return nations.filter((nation) => {\n        const searchedToLoweCase =\n          this.searchedNations.toLowerCase() !== \"\" &&\n          nation.name.common\n            .toLowerCase()\n            .startsWith(this.searchedNations.toLowerCase());\n\n        if (this.selectedRegion === \"all\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Americas\" && this.selectedRegion === \"america\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Africa\" && this.selectedRegion === \"africa\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Europe\" && this.selectedRegion === \"europe\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Oceania\" && this.selectedRegion === \"oceania\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Asia\" && this.selectedRegion === \"asia\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n\n        return false;\n      });\n    },\n    areTheNationsFound() {\n      return this.$store.getters.nationsFound;\n    },\n  },\n  created() {\n    //loadNations is triggered when the component is created\n    this.loadNations();\n  },\n  methods: {\n    loadNations() {\n      this.$store.dispatch(\"loadNations\");\n    },\n    filterRegion() {\n      const selection = document.getElementById(\"selectRegion\");\n      this.selectedRegion = selection.options[selection.selectedIndex].value;\n    },\n  },\n};\n</script>\n"]}]}