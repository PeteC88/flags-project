{"remainingRequest":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationDetails.vue?vue&type=template&id=71778b87&scoped=true","dependencies":[{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationDetails.vue","mtime":1654759186493},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js","mtime":1649769535122},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1649769535904},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js","mtime":1649769534032}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY291bnRyeSI+CiAgICA8YmFzZS1idXR0b24gY2xhc3M9ImJhY2stYnV0dG9uIiA6aXNEYXJrPSJpc0RhcmsiPgogICAgICA8c3BhbiBjbGFzcz0iYmFjay1hcnJvdyI+JiN4MjE5MDs8L3NwYW4+IEJhY2s8L2Jhc2UtYnV0dG9uCiAgICA+CiAgICA8YmFzZS1zcGlubmVyIHYtaWY9InRoaXMuaXNMb2FkaW5nIj48L2Jhc2Utc3Bpbm5lcj4KICAgIDxuYXRpb24tY2FyZC1kZXRhaWxzCiAgICAgIHYtZWxzZQogICAgICA6ZmxhZ3M9ImZpbHRlcmVkTmF0aW9uLmZsYWdzIgogICAgICA6bmFtZT0iZmlsdGVyZWROYXRpb24ubmFtZS5jb21tb24iCiAgICAgIDpuYXRpdmVOYW1lPSJjb3VudHJ5TmF0aXZlTmFtZSIKICAgICAgOnBvcHVsYXRpb249ImZpbHRlcmVkTmF0aW9uLnBvcHVsYXRpb24iCiAgICAgIDpzdWJyZWdpb249ImNvdW50cnlTdWJSZWdpb24iCiAgICAgIDpjYXBpdGFsPSJmaWx0ZXJlZE5hdGlvbi5jYXBpdGFsWzBdIgogICAgICA6dGxkPSJjb3VudHJ5VG9wTGV2ZWxEb21haW4iCiAgICAgIDpjdXJyZW5jaWVzPSJjb3VudHJ5Q3VycmVuY2llcyIKICAgICAgOmxhbmd1YWdlcz0iY291bnRyeUxhbmd1YWdlcyIKICAgICAgOmJvcmRlcnM9ImZpbHRlcmVkQ291bnRyeUJvcmRlck5hbWVzIgogICAgPjwvbmF0aW9uLWNhcmQtZGV0YWlscz4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationDetails.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACllD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationDetails.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"country\">\n    <base-button class=\"back-button\" :isDark=\"isDark\">\n      <span class=\"back-arrow\">&#x2190;</span> Back</base-button\n    >\n    <base-spinner v-if=\"this.isLoading\"></base-spinner>\n    <nation-card-details\n      v-else\n      :flags=\"filteredNation.flags\"\n      :name=\"filteredNation.name.common\"\n      :nativeName=\"countryNativeName\"\n      :population=\"filteredNation.population\"\n      :subregion=\"countrySubRegion\"\n      :capital=\"filteredNation.capital[0]\"\n      :tld=\"countryTopLevelDomain\"\n      :currencies=\"countryCurrencies\"\n      :languages=\"countryLanguages\"\n      :borders=\"filteredCountryBorderNames\"\n    ></nation-card-details>\n  </div>\n</template>\n<script>\nimport NationCardDetails from \"../components/NationCardDetails.vue\";\nexport default {\n  components: {\n    NationCardDetails,\n  },\n  props: {\n    name: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isLoading: false,\n      countryBorderNames: [],\n    };\n  },\n  computed: {\n    isDark() {\n      return this.$store.getters.isDarkSwitcher;\n    },\n    filteredNation() {\n      //return this.$store.getters.nations;\n      return this.$store.getters.nations.find((country) => {\n        const nameSlug = country.name.common.split(\" \").join(\"-\");\n        return nameSlug === this.name;\n      });\n    },\n    countryNativeName() {\n      //to extract the last entry in native names\n      const lastEntryNativeName = Object.values(\n        this.filteredNation.name.nativeName\n      ).pop().common;\n      return lastEntryNativeName;\n    },\n    countrySubRegion() {\n      return this.filteredNation.subregion\n        ? this.filteredNation.subregion\n        : \"none\";\n    },\n    countryTopLevelDomain() {\n      return !this.filteredNation.tld\n        ? \"none\"\n        : this.filteredNation.tld.join(\", \");\n    },\n    countryCurrencies() {\n      const currenciesList = [];\n\n      if (this.filteredNation.currencies) {\n        for (const currenciesName of Object.values(\n          this.filteredNation.currencies\n        )) {\n          currenciesList.push(currenciesName.name);\n        }\n      }\n\n      return currenciesList.length > 0\n        ? currenciesList.join(\", \")\n        : \"information not available\";\n    },\n    countryLanguages() {\n      const countryLanguages = [];\n\n      for (const language of Object.values(this.filteredNation.languages)) {\n        countryLanguages.push(language);\n      }\n      return countryLanguages.join(\", \");\n    },\n    filteredCountryBorderNames() {\n      this.getBordersNames();\n      return this.countryBorderNames === false\n        ? \"none\"\n        : this.countryBorderNames;\n    },\n  },\n\n  created() {\n    this.loadNations();\n  },\n  methods: {\n    //load the Countries from the API\n    async loadNations() {\n      this.isLoading = true;\n      try {\n        await this.$store.dispatch(\"loadNations\");\n        //this.getBordersNames();\n      } catch (error) {\n        this.error = error.message || \"Something went wrong\";\n      }\n      this.isLoading = false;\n    },\n    //Extract the actual name of the Countries that will be used in borders buttons by finding the cca3 value (this value is the same of the value of the borders in the JSON) and extract the common name too.\n    getBordersNames() {\n      const nations = this.$store.getters.nations;\n\n      if (!this.filteredNation.borders) {\n        this.countryBorderNames = [];\n      } else {\n        for (let i = 0; i < nations.length; i++) {\n          this.countryBorderNames.push({\n            nationBorderName: nations[i].cca3,\n            nationName: nations[i].name.common,\n          });\n        }\n      }\n\n      const renamedBorders = [];\n\n      const filterBorders = this.countryBorderNames.filter((border) =>\n        this.filteredNation.borders.includes(border.nationBorderName)\n      );\n\n      for (const border of filterBorders) {\n        renamedBorders.push(border.nationName);\n      }\n      if (renamedBorders !== []) {\n        this.countryBorderNames = renamedBorders.sort();\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.country {\n  position: relative;\n  top: 7rem;\n  padding: 0 1.5rem;\n}\n.button.back-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 8rem;\n  letter-spacing: 5px;\n  margin-bottom: 4rem;\n}\n.back-arrow {\n  font-size: 1.5rem;\n}\n@media screen and (min-width: 600px) {\n}\n@media screen and (min-width: 900px) {\n}\n@media screen and (min-width: 1200px) {\n}\n</style>\n"]}]}