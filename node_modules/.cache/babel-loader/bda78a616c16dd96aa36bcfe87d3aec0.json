{"remainingRequest":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/eslint-loader/index.js??ref--14-0!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/src/store/actions.js","dependencies":[{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/src/store/actions.js","mtime":1654601196606},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/babel.config.js","mtime":1649769569947},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js","mtime":1649769535122},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/eslint-loader/index.js","mtime":1649769532101}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9waWV0cm9jaWNjYXJlbGxvL0Rlc2t0b3AvRnJvbnRlbmRNZW50b3IgUHJvamVjdHMvZmxhZy1jaGFsbGVuZ2UgYmFja3VwIDA5MDYyMi9yZXN0LWNvdW50cmllcy1hcGktd2l0aC1jb2xvci10aGVtZS1zd2l0Y2hlci1tYXN0ZXIvZmxhZ3MtcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLmNhdXNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5mbGFncy5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICAvL2FjdGlvbiB0byBmZXRjaCB0aGUgZGF0YSBmcm9tIHRoZSBBUEkKICBsb2FkTmF0aW9uczogZnVuY3Rpb24gbG9hZE5hdGlvbnMoY29udGV4dCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlLCByZXNwb25zZURhdGEsIGVycm9yLCBuYXRpb25zLCBrZXksIG5hdGlvbjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9yZXN0Y291bnRyaWVzLmNvbS92My4xL2FsbCcpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlc3BvbnNlRGF0YSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGVycm9yID0gbmV3IEVycm9yKHJlc3BvbnNlRGF0YS5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZmV0Y2gnKTsKICAgICAgICAgICAgICB0aHJvdyBlcnJvcjsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBuYXRpb25zID0gW107CgogICAgICAgICAgICAgIGZvciAoa2V5IGluIHJlc3BvbnNlRGF0YSkgewogICAgICAgICAgICAgICAgbmF0aW9uID0gewogICAgICAgICAgICAgICAgICBuYW1lOiByZXNwb25zZURhdGFba2V5XS5uYW1lLAogICAgICAgICAgICAgICAgICBwb3B1bGF0aW9uOiByZXNwb25zZURhdGFba2V5XS5wb3B1bGF0aW9uLAogICAgICAgICAgICAgICAgICByZWdpb246IHJlc3BvbnNlRGF0YVtrZXldLnJlZ2lvbiwKICAgICAgICAgICAgICAgICAgY2FwaXRhbDogcmVzcG9uc2VEYXRhW2tleV0uY2FwaXRhbCwKICAgICAgICAgICAgICAgICAgZmxhZ3M6IHJlc3BvbnNlRGF0YVtrZXldLmZsYWdzLAogICAgICAgICAgICAgICAgICBuYXRpdmVOYW1lOiByZXNwb25zZURhdGFba2V5XS5uYXRpdmVOYW1lLAogICAgICAgICAgICAgICAgICB0bGQ6IHJlc3BvbnNlRGF0YVtrZXldLnRsZCwKICAgICAgICAgICAgICAgICAgY3VycmVuY2llczogcmVzcG9uc2VEYXRhW2tleV0uY3VycmVuY2llcywKICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2VzOiByZXNwb25zZURhdGFba2V5XS5sYW5ndWFnZXMsCiAgICAgICAgICAgICAgICAgIGNjYTM6IHJlc3BvbnNlRGF0YVtrZXldLmNjYTMsCiAgICAgICAgICAgICAgICAgIGJvcmRlcnM6IHJlc3BvbnNlRGF0YVtrZXldLmJvcmRlcnMKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBuYXRpb25zLnB1c2gobmF0aW9uKTsKCiAgICAgICAgICAgICAgICBpZiAoIW5hdGlvbi5jYXBpdGFsKSB7CiAgICAgICAgICAgICAgICAgIG5hdGlvbi5jYXBpdGFsID0gIk5vbmUiOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gLy9jb21taXQgdGhlIGFjdGlvbiB0byB0aGUgbXV0YXRpb25zCgoKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0TmF0aW9ucycsIG5hdGlvbnMpOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGlzRGFya1N3aXRjaGVyQWN0aW9uOiBmdW5jdGlvbiBpc0RhcmtTd2l0Y2hlckFjdGlvbihjb250ZXh0KSB7CiAgICBjb250ZXh0LmNvbW1pdCgnRGFya01vZGVTd2l0Y2hlcicpOwogIH0KfTs="},{"version":3,"sources":["/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge backup 090622/rest-countries-api-with-color-theme-switcher-master/flags-project/src/store/actions.js"],"names":["loadNations","context","fetch","response","json","responseData","ok","error","Error","message","nations","key","nation","name","population","region","capital","flags","nativeName","tld","currencies","languages","cca3","borders","push","commit","isDarkSwitcherAction"],"mappings":";;;;;;AAAA,eAAe;AACX;AACMA,EAAAA,WAFK,uBAEOC,OAFP,EAEgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,KAAK,CAAC,oCAAD,CADL;;AAAA;AACjBC,cAAAA,QADiB;AAAA;AAAA,qBAEIA,QAAQ,CAACC,IAAT,EAFJ;;AAAA;AAEjBC,cAAAA,YAFiB;;AAAA,kBAIlBF,QAAQ,CAACG,EAJS;AAAA;AAAA;AAAA;;AAKbC,cAAAA,KALa,GAKL,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAb,IAAwB,iBAAlC,CALK;AAAA,oBAMbF,KANa;;AAAA;AASjBG,cAAAA,OATiB,GASP,EATO;;AAWvB,mBAAWC,GAAX,IAAkBN,YAAlB,EAAgC;AACtBO,gBAAAA,MADsB,GACb;AACXC,kBAAAA,IAAI,EAAER,YAAY,CAACM,GAAD,CAAZ,CAAkBE,IADb;AAEXC,kBAAAA,UAAU,EAAET,YAAY,CAACM,GAAD,CAAZ,CAAkBG,UAFnB;AAGXC,kBAAAA,MAAM,EAAEV,YAAY,CAACM,GAAD,CAAZ,CAAkBI,MAHf;AAIXC,kBAAAA,OAAO,EAAEX,YAAY,CAACM,GAAD,CAAZ,CAAkBK,OAJhB;AAKXC,kBAAAA,KAAK,EAAEZ,YAAY,CAACM,GAAD,CAAZ,CAAkBM,KALd;AAMXC,kBAAAA,UAAU,EAAEb,YAAY,CAACM,GAAD,CAAZ,CAAkBO,UANnB;AAOXC,kBAAAA,GAAG,EAAEd,YAAY,CAACM,GAAD,CAAZ,CAAkBQ,GAPZ;AAQXC,kBAAAA,UAAU,EAAEf,YAAY,CAACM,GAAD,CAAZ,CAAkBS,UARnB;AASXC,kBAAAA,SAAS,EAAEhB,YAAY,CAACM,GAAD,CAAZ,CAAkBU,SATlB;AAUXC,kBAAAA,IAAI,EAAEjB,YAAY,CAACM,GAAD,CAAZ,CAAkBW,IAVb;AAWXC,kBAAAA,OAAO,EAAElB,YAAY,CAACM,GAAD,CAAZ,CAAkBY;AAXhB,iBADa;AAe5Bb,gBAAAA,OAAO,CAACc,IAAR,CAAaZ,MAAb;;AAEA,oBAAI,CAACA,MAAM,CAACI,OAAZ,EAAqB;AACjBJ,kBAAAA,MAAM,CAACI,OAAP,GAAiB,MAAjB;AACH;AACJ,eA/BsB,CAgCvB;;;AACAf,cAAAA,OAAO,CAACwB,MAAR,CAAe,YAAf,EAA6Bf,OAA7B;;AAjCuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkC1B,GApCU;AAqCXgB,EAAAA,oBArCW,gCAqCUzB,OArCV,EAqCmB;AAC1BA,IAAAA,OAAO,CAACwB,MAAR,CAAe,kBAAf;AACH;AAvCU,CAAf","sourcesContent":["export default {\n    //action to fetch the data from the API\n    async loadNations(context) {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n            const error = new Error(responseData.message || 'Failed to fetch');\n            throw error\n        }\n\n        const nations = [];\n\n        for (const key in responseData) {\n            const nation = {\n                name: responseData[key].name,\n                population: responseData[key].population,\n                region: responseData[key].region,\n                capital: responseData[key].capital,\n                flags: responseData[key].flags,\n                nativeName: responseData[key].nativeName,\n                tld: responseData[key].tld,\n                currencies: responseData[key].currencies,\n                languages: responseData[key].languages,\n                cca3: responseData[key].cca3,\n                borders: responseData[key].borders\n            }\n\n            nations.push(nation);\n\n            if (!nation.capital) {\n                nation.capital = \"None\";\n            }\n        }\n        //commit the action to the mutations\n        context.commit('setNations', nations)\n    },\n    isDarkSwitcherAction(context) {\n        context.commit('DarkModeSwitcher');\n    }\n};"]}]}