{"remainingRequest":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue?vue&type=template&id=3134e4d6","dependencies":[{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue","mtime":1650918288541},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/babel.config.js","mtime":1649769569947},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js","mtime":1649769535122},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1649769535904},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js","mtime":1649769534032}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5mbGFncy5qcyI7CmltcG9ydCB7IGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVTdGF0aWNWTm9kZSBhcyBfY3JlYXRlU3RhdGljVk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImZpbHRlcnMiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAic2VhcmMtYmFyIgp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICBjbGFzczogImZhLXNvbGlkIGZhLW1hZ25pZnlpbmctZ2xhc3MiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImxhYmVsIiwgewogIGZvcjogIm9wdGlvbnMiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVTdGF0aWNWTm9kZSgiPG9wdGlvbiB2YWx1ZT1cImFsbFwiPkZpbHRlciBieSBSZWdpb248L29wdGlvbj48b3B0aW9uIHZhbHVlPVwiYWZyaWNhXCI+QWZyaWNhPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT1cImFtZXJpY2FcIj5BbWVyaWNhPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT1cImFzaWFcIj5Bc2lhPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT1cImV1cm9wZVwiPkV1cm9wZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJvY2VhbmlhXCI+T2NlYW5pYTwvb3B0aW9uPiIsIDYpOwoKdmFyIF9ob2lzdGVkXzExID0gW19ob2lzdGVkXzVdOwp2YXIgX2hvaXN0ZWRfMTIgPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF8xMyA9IHsKICBrZXk6IDEKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9uYXRpb25fY2FyZCA9IF9yZXNvbHZlQ29tcG9uZW50KCJuYXRpb24tY2FyZCIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJzZWN0aW9uIiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVDb21tZW50Vk5vZGUoIiBObyBuZWVkIHRvIHVzZSBrZXl1cCBldmVudCBhcyB3ZSB1c2UgYSBjb21wdXRlZCBwcm9wZXJ0eSBpbiB0aGUgc2VhcmNoICIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2hvaXN0ZWRfMywgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgY2xhc3M6ICJzZWFyY2gtaW5wdXQiLAogICAgdHlwZTogInNlYXJjaCIsCiAgICBuYW1lOiAic2VhcmNoIiwKICAgIHBsYWNlaG9sZGVyOiAiU2VhcmNoIGZvciBhIENvdW50cnkuLi4iLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnNlYXJjaGVkTmF0aW9ucyA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRkYXRhLnNlYXJjaGVkTmF0aW9uc11dKV0pLCBfaG9pc3RlZF80LCBfY3JlYXRlRWxlbWVudFZOb2RlKCJzZWxlY3QiLCB7CiAgICBpZDogInNlbGVjdFJlZ2lvbiIsCiAgICByZWY6ICJzZWxlY3RSZWdpb24iLAogICAgb25DaGFuZ2U6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZmlsdGVyUmVnaW9uICYmICRvcHRpb25zLmZpbHRlclJlZ2lvbi5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgX2hvaXN0ZWRfMTEsIDU0NAogIC8qIEhZRFJBVEVfRVZFTlRTLCBORUVEX1BBVENIICovCiAgKSwgJG9wdGlvbnMuZmlsdGVyZWROYXRpb25zLmxlbmd0aCA+IDAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJ1bCIsIF9ob2lzdGVkXzEyLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkb3B0aW9ucy5maWx0ZXJlZE5hdGlvbnMsIGZ1bmN0aW9uIChuYXRpb24pIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X25hdGlvbl9jYXJkLCB7CiAgICAgIGtleTogbmF0aW9uLm5hbWUuY29tbW9uLAogICAgICBmbGFnczogbmF0aW9uLmZsYWdzLAogICAgICBuYW1lOiBuYXRpb24ubmFtZS5jb21tb24sCiAgICAgIHBvcHVsYXRpb246IG5hdGlvbi5wb3B1bGF0aW9uLAogICAgICByZWdpb246IG5hdGlvbi5yZWdpb24sCiAgICAgIGNhcGl0YWw6IG5hdGlvbi5jYXBpdGFsWzBdCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBbImZsYWdzIiwgIm5hbWUiLCAicG9wdWxhdGlvbiIsICJyZWdpb24iLCAiY2FwaXRhbCJdKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKV0pKSA6ICRkYXRhLnNlYXJjaGVkTmF0aW9ucyAhPT0gJycgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJoMyIsIF9ob2lzdGVkXzEzLCAiIFNvcnJ5LCBubyBuYXRpb24gZm91bmQsIHRyeSB0byBjaGFuZ2UgdGhlIHJlZ2lvbiBvciB0aGUgc3BlbGxpbmcgaW4gc2VhcmNoIGJhci4gSWYgeW91IHdhbnQgdG8gc2hvdyBhbGwgdGhlIENvdW50cnkgcGxlYXNlIHNlbGVjdCBcIkZpbHRlciBieSByZWdpb25cIiBhbmQgZGVsZXRlIHRoZSBpbnB1dCBvbiBzZWFyY2ggYmFyICIpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pOwp9"},{"version":3,"mappings":";;;;AACWA,OAAK,EAAC;;;AAERA,OAAK,EAAC;;;8BACTC,oBAA4C,GAA5C,EAA4C;AAAzCD,OAAK,EAAC;AAAmC,CAA5C,EAAuC,IAAvC,EAAuC;AAAA;AAAvC;;8BASFC,oBAA6B,OAA7B,EAA6B;AAAtBC,KAAG,EAAC;AAAkB,CAA7B,EAAoB,IAApB,EAAoB;AAAA;AAApB;;;;mBAEEC;;;;;;;;;;uBAdJC,oBAqCU,SArCV,cAqCU,CApCRC,+FAoCQ,EAnCRJ,oBASM,KATN,cASM,CARJK,UAQI,kBAPJL,oBAME,OANF,EAME;AALAD,SAAK,EAAC,cAKN;AAJAO,QAAI,EAAC,QAIL;AAHAC,QAAI,EAAC,QAGL;AAFAC,eAAW,EAAC,yBAEZ;;aADSC,wBAAeC;;AACxB,GANF;;AAAA,oBAKWD,wBAEP,CATN,CAmCQ,EAzBRE,UAyBQ,EAxBRX,oBAOS,QAPT,EAOS;AAPDY,MAAE,EAAC,cAOF;AAPiBC,OAAG,EAAC,cAOrB;AAPqCC,YAAM;AAAA,aAAEC,yEAAF;AAAA;AAO3C,GAPT;;AAAA,GAwBQ,EAhBEA,yBAAgBC,MAAhB,GAAsB,mBAAhCb,oBAUK,IAVL,EAUKc,WAVL,EAUK,oBATHd,oBAQee,SARf,EAQe,IARf,EAQeC,YAPIJ,wBAOJ,EAPmB,UAAzBK,MAAyB,EAAnB;yBADfC,aAQeC,sBARf,EAQe;AANZC,SAAG,EAAEH,MAAM,CAACb,IAAP,CAAYiB,MAML;AALZC,WAAK,EAAEL,MAAM,CAACK,KAKF;AAJZlB,UAAI,EAAEa,MAAM,CAACb,IAAP,CAAYiB,MAIN;AAHZE,gBAAU,EAAEN,MAAM,CAACM,UAGP;AAFZC,YAAM,EAAEP,MAAM,CAACO,MAEH;AADZC,aAAO,EAAER,MAAM,CAACQ,OAAP,CAAc,CAAd;AACG,KARf;;AAAA;GAQe,CARf;;AAAA,GASG,EAVL,KAWenB,0BAAe,oBAA9BN,oBAIK,IAJL,EAIK0B,WAJL,EAAuC,6LAAvC,sCAKQ,CArCV","names":["class","_createElementVNode","for","_hoisted_5","_createElementBlock","_createCommentVNode","_hoisted_3","type","name","placeholder","$data","$event","_hoisted_4","id","ref","onChange","$options","length","_hoisted_12","_Fragment","_renderList","nation","_createBlock","_component_nation_card","key","common","flags","population","region","capital","_hoisted_13"],"sourceRoot":"","sources":["/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue"],"sourcesContent":["<template>\n  <section class=\"filters\">\n    <!-- No need to use keyup event as we use a computed property in the search -->\n    <div class=\"searc-bar\">\n      <i class=\"fa-solid fa-magnifying-glass\"></i>\n      <input\n        class=\"search-input\"\n        type=\"search\"\n        name=\"search\"\n        placeholder=\"Search for a Country...\"\n        v-model=\"searchedNations\"\n      />\n    </div>\n    <label for=\"options\"></label>\n    <select id=\"selectRegion\" ref=\"selectRegion\" @change=\"filterRegion\">\n      <option value=\"all\">Filter by Region</option>\n      <option value=\"africa\">Africa</option>\n      <option value=\"america\">America</option>\n      <option value=\"asia\">Asia</option>\n      <option value=\"europe\">Europe</option>\n      <option value=\"oceania\">Oceania</option>\n    </select>\n    <ul v-if=\"filteredNations.length > 0\">\n      <nation-card\n        v-for=\"nation in filteredNations\"\n        :key=\"nation.name.common\"\n        :flags=\"nation.flags\"\n        :name=\"nation.name.common\"\n        :population=\"nation.population\"\n        :region=\"nation.region\"\n        :capital=\"nation.capital[0]\"\n      ></nation-card>\n    </ul>\n    <h3 v-else-if=\"searchedNations !== ''\">\n      Sorry, no nation found, try to change the region or the spelling in search\n      bar. If you want to show all the Country please select \"Filter by region\"\n      and delete the input on search bar\n    </h3>\n  </section>\n</template>\n<script>\nimport NationCard from \"../components/NationCard.vue\";\nexport default {\n  components: {\n    NationCard,\n  },\n  data() {\n    return {\n      selectedRegion: \"all\",\n      searchedNations: \"\",\n      noNationsFound: false,\n    };\n  },\n  //use the computed property to access the getters from the store\n  computed: {\n    filteredNations() {\n      const nations = this.$store.getters.nations;\n\n      //const regionSelect = this.$refs.selectRegion;\n\n      return nations.filter((nation) => {\n        const searchedToLoweCase =\n          this.searchedNations.toLowerCase() !== \"\" &&\n          nation.name.common\n            .toLowerCase()\n            .startsWith(this.searchedNations.toLowerCase());\n\n        if (this.selectedRegion === \"all\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Americas\" && this.selectedRegion === \"america\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Africa\" && this.selectedRegion === \"africa\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Europe\" && this.selectedRegion === \"europe\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Oceania\" && this.selectedRegion === \"oceania\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Asia\" && this.selectedRegion === \"asia\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n\n        return false;\n      });\n    },\n    areTheNationsFound() {\n      return this.$store.getters.nationsFound;\n    },\n  },\n  created() {\n    //loadNations is triggered when the component is created\n    this.loadNations();\n  },\n  methods: {\n    loadNations() {\n      this.$store.dispatch(\"loadNations\");\n    },\n    filterRegion() {\n      const selection = document.getElementById(\"selectRegion\");\n      this.selectedRegion = selection.options[selection.selectedIndex].value;\n    },\n  },\n};\n</script>\n"]}]}