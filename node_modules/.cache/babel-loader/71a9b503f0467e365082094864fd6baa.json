{"remainingRequest":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationDetails.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationDetails.vue","mtime":1654759186493},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/babel.config.js","mtime":1649769569947},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js","mtime":1649769535122},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js","mtime":1649769534032}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9waWV0cm9jaWNjYXJlbGxvL0Rlc2t0b3AvRnJvbnRlbmRNZW50b3IgUHJvamVjdHMvZmxhZy1jaGFsbGVuZ2UvcmVzdC1jb3VudHJpZXMtYXBpLXdpdGgtY29sb3ItdGhlbWUtc3dpdGNoZXItbWFzdGVyL2ZsYWdzLXByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3BpZXRyb2NpY2NhcmVsbG8vRGVza3RvcC9Gcm9udGVuZE1lbnRvciBQcm9qZWN0cy9mbGFnLWNoYWxsZW5nZS9yZXN0LWNvdW50cmllcy1hcGktd2l0aC1jb2xvci10aGVtZS1zd2l0Y2hlci1tYXN0ZXIvZmxhZ3MtcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCBOYXRpb25DYXJkRGV0YWlscyBmcm9tICIuLi9jb21wb25lbnRzL05hdGlvbkNhcmREZXRhaWxzLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBOYXRpb25DYXJkRGV0YWlsczogTmF0aW9uQ2FyZERldGFpbHMKICB9LAogIHByb3BzOiB7CiAgICBuYW1lOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBjb3VudHJ5Qm9yZGVyTmFtZXM6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzRGFyazogZnVuY3Rpb24gaXNEYXJrKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5pc0RhcmtTd2l0Y2hlcjsKICAgIH0sCiAgICBmaWx0ZXJlZE5hdGlvbjogZnVuY3Rpb24gZmlsdGVyZWROYXRpb24oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvL3JldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLm5hdGlvbnM7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLm5hdGlvbnMuZmluZChmdW5jdGlvbiAoY291bnRyeSkgewogICAgICAgIHZhciBuYW1lU2x1ZyA9IGNvdW50cnkubmFtZS5jb21tb24uc3BsaXQoIiAiKS5qb2luKCItIik7CiAgICAgICAgcmV0dXJuIG5hbWVTbHVnID09PSBfdGhpcy5uYW1lOwogICAgICB9KTsKICAgIH0sCiAgICBjb3VudHJ5TmF0aXZlTmFtZTogZnVuY3Rpb24gY291bnRyeU5hdGl2ZU5hbWUoKSB7CiAgICAgIC8vdG8gZXh0cmFjdCB0aGUgbGFzdCBlbnRyeSBpbiBuYXRpdmUgbmFtZXMKICAgICAgdmFyIGxhc3RFbnRyeU5hdGl2ZU5hbWUgPSBPYmplY3QudmFsdWVzKHRoaXMuZmlsdGVyZWROYXRpb24ubmFtZS5uYXRpdmVOYW1lKS5wb3AoKS5jb21tb247CiAgICAgIHJldHVybiBsYXN0RW50cnlOYXRpdmVOYW1lOwogICAgfSwKICAgIGNvdW50cnlTdWJSZWdpb246IGZ1bmN0aW9uIGNvdW50cnlTdWJSZWdpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlcmVkTmF0aW9uLnN1YnJlZ2lvbiA/IHRoaXMuZmlsdGVyZWROYXRpb24uc3VicmVnaW9uIDogIm5vbmUiOwogICAgfSwKICAgIGNvdW50cnlUb3BMZXZlbERvbWFpbjogZnVuY3Rpb24gY291bnRyeVRvcExldmVsRG9tYWluKCkgewogICAgICByZXR1cm4gIXRoaXMuZmlsdGVyZWROYXRpb24udGxkID8gIm5vbmUiIDogdGhpcy5maWx0ZXJlZE5hdGlvbi50bGQuam9pbigiLCAiKTsKICAgIH0sCiAgICBjb3VudHJ5Q3VycmVuY2llczogZnVuY3Rpb24gY291bnRyeUN1cnJlbmNpZXMoKSB7CiAgICAgIHZhciBjdXJyZW5jaWVzTGlzdCA9IFtdOwoKICAgICAgaWYgKHRoaXMuZmlsdGVyZWROYXRpb24uY3VycmVuY2llcykgewogICAgICAgIGZvciAodmFyIF9pID0gMCwgX09iamVjdCR2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMuZmlsdGVyZWROYXRpb24uY3VycmVuY2llcyk7IF9pIDwgX09iamVjdCR2YWx1ZXMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICB2YXIgY3VycmVuY2llc05hbWUgPSBfT2JqZWN0JHZhbHVlc1tfaV07CiAgICAgICAgICBjdXJyZW5jaWVzTGlzdC5wdXNoKGN1cnJlbmNpZXNOYW1lLm5hbWUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGN1cnJlbmNpZXNMaXN0Lmxlbmd0aCA+IDAgPyBjdXJyZW5jaWVzTGlzdC5qb2luKCIsICIpIDogImluZm9ybWF0aW9uIG5vdCBhdmFpbGFibGUiOwogICAgfSwKICAgIGNvdW50cnlMYW5ndWFnZXM6IGZ1bmN0aW9uIGNvdW50cnlMYW5ndWFnZXMoKSB7CiAgICAgIHZhciBjb3VudHJ5TGFuZ3VhZ2VzID0gW107CgogICAgICBmb3IgKHZhciBfaTIgPSAwLCBfT2JqZWN0JHZhbHVlczIgPSBPYmplY3QudmFsdWVzKHRoaXMuZmlsdGVyZWROYXRpb24ubGFuZ3VhZ2VzKTsgX2kyIDwgX09iamVjdCR2YWx1ZXMyLmxlbmd0aDsgX2kyKyspIHsKICAgICAgICB2YXIgbGFuZ3VhZ2UgPSBfT2JqZWN0JHZhbHVlczJbX2kyXTsKICAgICAgICBjb3VudHJ5TGFuZ3VhZ2VzLnB1c2gobGFuZ3VhZ2UpOwogICAgICB9CgogICAgICByZXR1cm4gY291bnRyeUxhbmd1YWdlcy5qb2luKCIsICIpOwogICAgfSwKICAgIGZpbHRlcmVkQ291bnRyeUJvcmRlck5hbWVzOiBmdW5jdGlvbiBmaWx0ZXJlZENvdW50cnlCb3JkZXJOYW1lcygpIHsKICAgICAgdGhpcy5nZXRCb3JkZXJzTmFtZXMoKTsKICAgICAgcmV0dXJuIHRoaXMuY291bnRyeUJvcmRlck5hbWVzID09PSBmYWxzZSA/ICJub25lIiA6IHRoaXMuY291bnRyeUJvcmRlck5hbWVzOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMubG9hZE5hdGlvbnMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vbG9hZCB0aGUgQ291bnRyaWVzIGZyb20gdGhlIEFQSQogICAgbG9hZE5hdGlvbnM6IGZ1bmN0aW9uIGxvYWROYXRpb25zKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLmlzTG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kc3RvcmUuZGlzcGF0Y2goImxvYWROYXRpb25zIik7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA2OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIF90aGlzMi5lcnJvciA9IF9jb250ZXh0LnQwLm1lc3NhZ2UgfHwgIlNvbWV0aGluZyB3ZW50IHdyb25nIjsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX3RoaXMyLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCA2XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvL0V4dHJhY3QgdGhlIGFjdHVhbCBuYW1lIG9mIHRoZSBDb3VudHJpZXMgdGhhdCB3aWxsIGJlIHVzZWQgaW4gYm9yZGVycyBidXR0b25zIGJ5IGZpbmRpbmcgdGhlIGNjYTMgdmFsdWUgKHRoaXMgdmFsdWUgaXMgdGhlIHNhbWUgb2YgdGhlIHZhbHVlIG9mIHRoZSBib3JkZXJzIGluIHRoZSBKU09OKSBhbmQgZXh0cmFjdCB0aGUgY29tbW9uIG5hbWUgdG9vLgogICAgZ2V0Qm9yZGVyc05hbWVzOiBmdW5jdGlvbiBnZXRCb3JkZXJzTmFtZXMoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIG5hdGlvbnMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLm5hdGlvbnM7CgogICAgICBpZiAoIXRoaXMuZmlsdGVyZWROYXRpb24uYm9yZGVycykgewogICAgICAgIHRoaXMuY291bnRyeUJvcmRlck5hbWVzID0gW107CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuYXRpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB0aGlzLmNvdW50cnlCb3JkZXJOYW1lcy5wdXNoKHsKICAgICAgICAgICAgbmF0aW9uQm9yZGVyTmFtZTogbmF0aW9uc1tpXS5jY2EzLAogICAgICAgICAgICBuYXRpb25OYW1lOiBuYXRpb25zW2ldLm5hbWUuY29tbW9uCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHZhciByZW5hbWVkQm9yZGVycyA9IFtdOwogICAgICB2YXIgZmlsdGVyQm9yZGVycyA9IHRoaXMuY291bnRyeUJvcmRlck5hbWVzLmZpbHRlcihmdW5jdGlvbiAoYm9yZGVyKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMy5maWx0ZXJlZE5hdGlvbi5ib3JkZXJzLmluY2x1ZGVzKGJvcmRlci5uYXRpb25Cb3JkZXJOYW1lKTsKICAgICAgfSk7CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZmlsdGVyQm9yZGVycyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBib3JkZXIgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIHJlbmFtZWRCb3JkZXJzLnB1c2goYm9yZGVyLm5hdGlvbk5hbWUpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICBpZiAocmVuYW1lZEJvcmRlcnMgIT09IFtdKSB7CiAgICAgICAgdGhpcy5jb3VudHJ5Qm9yZGVyTmFtZXMgPSByZW5hbWVkQm9yZGVycy5zb3J0KCk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"mappings":"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","names":["NationCardDetails","components","props","name","type","String","required","data","isLoading","countryBorderNames","computed","isDark","$store","getters","isDarkSwitcher","filteredNation","nations","find","country","nameSlug","common","split","join","countryNativeName","lastEntryNativeName","Object","values","nativeName","pop","countrySubRegion","subregion","countryTopLevelDomain","tld","countryCurrencies","currenciesList","currencies","currenciesName","push","length","countryLanguages","languages","language","filteredCountryBorderNames","getBordersNames","created","loadNations","methods","dispatch","error","message","borders","i","nationBorderName","cca3","nationName","renamedBorders","filterBorders","filter","border","includes","sort"],"sourceRoot":"","sources":["/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationDetails.vue"],"sourcesContent":["<template>\n  <div class=\"country\">\n    <base-button class=\"back-button\" :isDark=\"isDark\">\n      <span class=\"back-arrow\">&#x2190;</span> Back</base-button\n    >\n    <base-spinner v-if=\"this.isLoading\"></base-spinner>\n    <nation-card-details\n      v-else\n      :flags=\"filteredNation.flags\"\n      :name=\"filteredNation.name.common\"\n      :nativeName=\"countryNativeName\"\n      :population=\"filteredNation.population\"\n      :subregion=\"countrySubRegion\"\n      :capital=\"filteredNation.capital[0]\"\n      :tld=\"countryTopLevelDomain\"\n      :currencies=\"countryCurrencies\"\n      :languages=\"countryLanguages\"\n      :borders=\"filteredCountryBorderNames\"\n    ></nation-card-details>\n  </div>\n</template>\n<script>\nimport NationCardDetails from \"../components/NationCardDetails.vue\";\nexport default {\n  components: {\n    NationCardDetails,\n  },\n  props: {\n    name: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isLoading: false,\n      countryBorderNames: [],\n    };\n  },\n  computed: {\n    isDark() {\n      return this.$store.getters.isDarkSwitcher;\n    },\n    filteredNation() {\n      //return this.$store.getters.nations;\n      return this.$store.getters.nations.find((country) => {\n        const nameSlug = country.name.common.split(\" \").join(\"-\");\n        return nameSlug === this.name;\n      });\n    },\n    countryNativeName() {\n      //to extract the last entry in native names\n      const lastEntryNativeName = Object.values(\n        this.filteredNation.name.nativeName\n      ).pop().common;\n      return lastEntryNativeName;\n    },\n    countrySubRegion() {\n      return this.filteredNation.subregion\n        ? this.filteredNation.subregion\n        : \"none\";\n    },\n    countryTopLevelDomain() {\n      return !this.filteredNation.tld\n        ? \"none\"\n        : this.filteredNation.tld.join(\", \");\n    },\n    countryCurrencies() {\n      const currenciesList = [];\n\n      if (this.filteredNation.currencies) {\n        for (const currenciesName of Object.values(\n          this.filteredNation.currencies\n        )) {\n          currenciesList.push(currenciesName.name);\n        }\n      }\n\n      return currenciesList.length > 0\n        ? currenciesList.join(\", \")\n        : \"information not available\";\n    },\n    countryLanguages() {\n      const countryLanguages = [];\n\n      for (const language of Object.values(this.filteredNation.languages)) {\n        countryLanguages.push(language);\n      }\n      return countryLanguages.join(\", \");\n    },\n    filteredCountryBorderNames() {\n      this.getBordersNames();\n      return this.countryBorderNames === false\n        ? \"none\"\n        : this.countryBorderNames;\n    },\n  },\n\n  created() {\n    this.loadNations();\n  },\n  methods: {\n    //load the Countries from the API\n    async loadNations() {\n      this.isLoading = true;\n      try {\n        await this.$store.dispatch(\"loadNations\");\n        //this.getBordersNames();\n      } catch (error) {\n        this.error = error.message || \"Something went wrong\";\n      }\n      this.isLoading = false;\n    },\n    //Extract the actual name of the Countries that will be used in borders buttons by finding the cca3 value (this value is the same of the value of the borders in the JSON) and extract the common name too.\n    getBordersNames() {\n      const nations = this.$store.getters.nations;\n\n      if (!this.filteredNation.borders) {\n        this.countryBorderNames = [];\n      } else {\n        for (let i = 0; i < nations.length; i++) {\n          this.countryBorderNames.push({\n            nationBorderName: nations[i].cca3,\n            nationName: nations[i].name.common,\n          });\n        }\n      }\n\n      const renamedBorders = [];\n\n      const filterBorders = this.countryBorderNames.filter((border) =>\n        this.filteredNation.borders.includes(border.nationBorderName)\n      );\n\n      for (const border of filterBorders) {\n        renamedBorders.push(border.nationName);\n      }\n      if (renamedBorders !== []) {\n        this.countryBorderNames = renamedBorders.sort();\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.country {\n  position: relative;\n  top: 7rem;\n  padding: 0 1.5rem;\n}\n.button.back-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 8rem;\n  letter-spacing: 5px;\n  margin-bottom: 4rem;\n}\n.back-arrow {\n  font-size: 1.5rem;\n}\n@media screen and (min-width: 600px) {\n}\n@media screen and (min-width: 900px) {\n}\n@media screen and (min-width: 1200px) {\n}\n</style>\n"]}]}