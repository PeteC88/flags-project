{"remainingRequest":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue?vue&type=template&id=3134e4d6","dependencies":[{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue","mtime":1650906797025},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/babel.config.js","mtime":1649769569947},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/babel-loader/lib/index.js","mtime":1649769535122},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1649769535904},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/cache-loader/dist/cjs.js","mtime":1649769531592},{"path":"/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/node_modules/vue-loader-v16/dist/index.js","mtime":1649769534032}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5mbGFncy5qcyI7CmltcG9ydCB7IGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCB2TW9kZWxUZXh0IGFzIF92TW9kZWxUZXh0LCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVTdGF0aWNWTm9kZSBhcyBfY3JlYXRlU3RhdGljVk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImZpbHRlcnMiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJsYWJlbCIsIHsKICBmb3I6ICJvcHRpb25zIgp9LCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlU3RhdGljVk5vZGUoIjxvcHRpb24gdmFsdWU9XCJhbGxcIj5GaWx0ZXIgYnkgUmVnaW9uPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT1cImFmcmljYVwiPkFmcmljYTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJhbWVyaWNhXCI+QW1lcmljYTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJhc2lhXCI+QXNpYTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJldXJvcGVcIj5FdXJvcGU8L29wdGlvbj48b3B0aW9uIHZhbHVlPVwib2NlYW5pYVwiPk9jZWFuaWE8L29wdGlvbj4iLCA2KTsKCnZhciBfaG9pc3RlZF85ID0gW19ob2lzdGVkXzNdOwp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF8xMSA9IHsKICBrZXk6IDEKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9uYXRpb25fY2FyZCA9IF9yZXNvbHZlQ29tcG9uZW50KCJuYXRpb24tY2FyZCIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJzZWN0aW9uIiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVDb21tZW50Vk5vZGUoIiBObyBuZWVkIHRvIHVzZSBrZXl1cCBldmVudCBhcyB3ZSB1c2UgYSBjb21wdXRlZCBwcm9wZXJ0eSBpbiB0aGUgc2VhcmNoICIpLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCB7CiAgICB0eXBlOiAic2VhcmNoIiwKICAgIG5hbWU6ICJzZWFyY2giLAogICAgcGxhY2Vob2xkZXI6ICJTZWFyY2ggZm9yIGEgQ291bnRyeSIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEuc2VhcmNoZWROYXRpb25zID0gJGV2ZW50OwogICAgfSkKICB9LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgJGRhdGEuc2VhcmNoZWROYXRpb25zXV0pLCBfaG9pc3RlZF8yLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJzZWxlY3QiLCB7CiAgICBpZDogInNlbGVjdFJlZ2lvbiIsCiAgICByZWY6ICJzZWxlY3RSZWdpb24iLAogICAgb25DaGFuZ2U6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZmlsdGVyUmVnaW9uICYmICRvcHRpb25zLmZpbHRlclJlZ2lvbi5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgX2hvaXN0ZWRfOSwgNTQ0CiAgLyogSFlEUkFURV9FVkVOVFMsIE5FRURfUEFUQ0ggKi8KICApLCAkb3B0aW9ucy5maWx0ZXJlZE5hdGlvbnMubGVuZ3RoID4gMCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soInVsIiwgX2hvaXN0ZWRfMTAsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRvcHRpb25zLmZpbHRlcmVkTmF0aW9ucywgZnVuY3Rpb24gKG5hdGlvbikgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfbmF0aW9uX2NhcmQsIHsKICAgICAga2V5OiBuYXRpb24ubmFtZS5jb21tb24sCiAgICAgIGZsYWdzOiBuYXRpb24uZmxhZ3MsCiAgICAgIG5hbWU6IG5hdGlvbi5uYW1lLmNvbW1vbiwKICAgICAgcG9wdWxhdGlvbjogbmF0aW9uLnBvcHVsYXRpb24sCiAgICAgIHJlZ2lvbjogbmF0aW9uLnJlZ2lvbiwKICAgICAgY2FwaXRhbDogbmF0aW9uLmNhcGl0YWxbMF0KICAgIH0sIG51bGwsIDgKICAgIC8qIFBST1BTICovCiAgICAsIFsiZmxhZ3MiLCAibmFtZSIsICJwb3B1bGF0aW9uIiwgInJlZ2lvbiIsICJjYXBpdGFsIl0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSkpIDogJGRhdGEuc2VhcmNoZWROYXRpb25zICE9PSAnJyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImgzIiwgX2hvaXN0ZWRfMTEsICIgU29ycnksIG5vIG5hdGlvbiBmb3VuZCwgdHJ5IHRvIGNoYW5nZSB0aGUgcmVnaW9uIG9yIHRoZSBzcGVsbGluZyBpbiBzZWFyY2ggYmFyLiBJZiB5b3Ugd2FudCB0byBzaG93IGFsbCB0aGUgQ291bnRyeSBwbGVhc2Ugc2VsZWN0IFwiRmlsdGVyIGJ5IHJlZ2lvblwiIGFuZCBkZWxldGUgdGhlIGlucHV0IG9uIHNlYXJjaCBiYXIgIikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSk7Cn0="},{"version":3,"mappings":";;;;AACWA,OAAK,EAAC;;;8BAQbC,oBAA6B,OAA7B,EAA6B;AAAtBC,KAAG,EAAC;AAAkB,CAA7B,EAAoB,IAApB,EAAoB;AAAA;AAApB;;;;kBAEEC;;;;;;;;;;uBAVJC,oBAiCU,SAjCV,cAiCU,CAhCRC,+FAgCQ,kBA/BRJ,oBAKE,OALF,EAKE;AAJAK,QAAI,EAAC,QAIL;AAHAC,QAAI,EAAC,QAGL;AAFAC,eAAW,EAAC,sBAEZ;;aADSC,wBAAeC;;AACxB,GALF;;AAAA,oBAIWD,wBA2BH,EAzBRE,UAyBQ,EAxBRV,oBAOS,QAPT,EAOS;AAPDW,MAAE,EAAC,cAOF;AAPiBC,OAAG,EAAC,cAOrB;AAPqCC,YAAM;AAAA,aAAEC,yEAAF;AAAA;AAO3C,GAPT;;AAAA,GAwBQ,EAhBEA,yBAAgBC,MAAhB,GAAsB,mBAAhCZ,oBAUK,IAVL,EAUKa,WAVL,EAUK,oBATHb,oBAQec,SARf,EAQe,IARf,EAQeC,YAPIJ,wBAOJ,EAPmB,UAAzBK,MAAyB,EAAnB;yBADfC,aAQeC,sBARf,EAQe;AANZC,SAAG,EAAEH,MAAM,CAACb,IAAP,CAAYiB,MAML;AALZC,WAAK,EAAEL,MAAM,CAACK,KAKF;AAJZlB,UAAI,EAAEa,MAAM,CAACb,IAAP,CAAYiB,MAIN;AAHZE,gBAAU,EAAEN,MAAM,CAACM,UAGP;AAFZC,YAAM,EAAEP,MAAM,CAACO,MAEH;AADZC,aAAO,EAAER,MAAM,CAACQ,OAAP,CAAc,CAAd;AACG,KARf;;AAAA;GAQe,CARf;;AAAA,GASG,EAVL,KAWenB,0BAAe,oBAA9BL,oBAIK,IAJL,EAIKyB,WAJL,EAAuC,6LAAvC,sCAKQ,CAjCV","names":["class","_createElementVNode","for","_hoisted_3","_createElementBlock","_createCommentVNode","type","name","placeholder","$data","$event","_hoisted_2","id","ref","onChange","$options","length","_hoisted_10","_Fragment","_renderList","nation","_createBlock","_component_nation_card","key","common","flags","population","region","capital","_hoisted_11"],"sourceRoot":"","sources":["/Users/pietrociccarello/Desktop/FrontendMentor Projects/flag-challenge/rest-countries-api-with-color-theme-switcher-master/flags-project/src/pages/NationsList.vue"],"sourcesContent":["<template>\n  <section class=\"filters\">\n    <!-- No need to use keyup event as we use a computed property in the search -->\n    <input\n      type=\"search\"\n      name=\"search\"\n      placeholder=\"Search for a Country\"\n      v-model=\"searchedNations\"\n    />\n    <label for=\"options\"></label>\n    <select id=\"selectRegion\" ref=\"selectRegion\" @change=\"filterRegion\">\n      <option value=\"all\">Filter by Region</option>\n      <option value=\"africa\">Africa</option>\n      <option value=\"america\">America</option>\n      <option value=\"asia\">Asia</option>\n      <option value=\"europe\">Europe</option>\n      <option value=\"oceania\">Oceania</option>\n    </select>\n    <ul v-if=\"filteredNations.length > 0\">\n      <nation-card\n        v-for=\"nation in filteredNations\"\n        :key=\"nation.name.common\"\n        :flags=\"nation.flags\"\n        :name=\"nation.name.common\"\n        :population=\"nation.population\"\n        :region=\"nation.region\"\n        :capital=\"nation.capital[0]\"\n      ></nation-card>\n    </ul>\n    <h3 v-else-if=\"searchedNations !== ''\">\n      Sorry, no nation found, try to change the region or the spelling in search\n      bar. If you want to show all the Country please select \"Filter by region\"\n      and delete the input on search bar\n    </h3>\n  </section>\n</template>\n<script>\nimport NationCard from \"../components/NationCard.vue\";\nexport default {\n  components: {\n    NationCard,\n  },\n  data() {\n    return {\n      selectedRegion: \"all\",\n      searchedNations: \"\",\n      noNationsFound: false,\n    };\n  },\n  //use the computed property to access the getters from the store\n  computed: {\n    filteredNations() {\n      const nations = this.$store.getters.nations;\n\n      //const regionSelect = this.$refs.selectRegion;\n\n      return nations.filter((nation) => {\n        const searchedToLoweCase =\n          this.searchedNations.toLowerCase() !== \"\" &&\n          nation.name.common\n            .toLowerCase()\n            .startsWith(this.searchedNations.toLowerCase());\n\n        if (this.selectedRegion === \"all\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Americas\" && this.selectedRegion === \"america\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Africa\" && this.selectedRegion === \"africa\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Europe\" && this.selectedRegion === \"europe\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Oceania\" && this.selectedRegion === \"oceania\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n        if (nation.region === \"Asia\" && this.selectedRegion === \"asia\") {\n          if (searchedToLoweCase) {\n            return true;\n          } else if (!this.searchedNations) {\n            return nations;\n          }\n        }\n\n        return false;\n      });\n    },\n    areTheNationsFound() {\n      return this.$store.getters.nationsFound;\n    },\n  },\n  created() {\n    //loadNations is triggered when the component is created\n    this.loadNations();\n  },\n  methods: {\n    loadNations() {\n      this.$store.dispatch(\"loadNations\");\n    },\n    filterRegion() {\n      const selection = document.getElementById(\"selectRegion\");\n      this.selectedRegion = selection.options[selection.selectedIndex].value;\n    },\n  },\n};\n</script>\n"]}]}